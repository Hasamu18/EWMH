 - Hệ thống sẽ có 5 folders chính và nhiều docker files đc thiết kế theo kiến trúc microservice
1. Gateway: là 1 cái cổng điều phối, sẽ điều phối các requests đến đúng với service tương ứng
----------------------------------------------------------------------------------------------------------------------------
2. Infrastructure: là 1 nơi chứa các method dùng chung cho nhiều nơi và cũng là nơi ghi lại log lỗi từ các api để debug
2.1. Utility: là 1 nơi chứa các method dùng chung cho nhiều nơi
2.2. Logging: là 1 nơi ghi lại log lỗi từ các api để debug
------------------------------------------------------------------------------------------------------------------------------
3. Sales: (kiến trúc clean) là 1 service chứa các api xử lý các yêu cầu liên quan đến bán products và service packages
3.1. Sales.Api: (cùng cấp độ với Sales.Infrastructure)
3.1.1. Controllers: là nơi chứa các api xử lý các yêu cầu liên quan đến bán products và service packages

3.2. Sales.Infrastructure: (cùng cấp độ với Sales.Api)
3.2.1. Repositories: chứa các phương thức kết nối DB cho CRUD

3.3. Sales.Application: CQRS
3.3.1. Commands: chứa các command liên quan đến việc Create, Update, Delete trong DB
3.3.2. Queries: chứa các query liên quan đến việc Read trong DB
3.3.3. Handlers: chứa các handler xử lý các commands và queries
3.3.4. Mappers: chứa các ánh xạ bằng auto mapper
3.3.5. ViewModels: chứa các Models hỗ trợ thêm

3.4. Sales.Domain
3.4.1. Entities: chứa các thực thể của DB
3.4.2. IRepositories: là nơi chứa các interface cho các phương thức kết nối DB cho CRUD
----------------------------------------------------------------------------------------------------------------------------------
4. Users: (kiến trúc clean) là 1 service chứa các api xử lý các yêu cầu liên quan đến tài khoản
4.1. Users.Api: (cùng cấp độ với Users.Infrastructure)
4.1.1. Controllers: là nơi chứa các api xử lý các yêu cầu liên quan đến tài khoản

4.2. Users.Infrastructure: (cùng cấp độ với Users.Api)
4.2.1. Repositories: chứa các phương thức kết nối DB cho CRUD

4.3. Users.Application: CQRS
4.3.1. Commands: chứa các command liên quan đến việc Create, Update, Delete trong DB
4.3.2. Queries: chứa các query liên quan đến việc Read trong DB
4.3.3. Handlers: chứa các handler xử lý các commands và queries
4.3.4. Mappers: chứa các ánh xạ bằng auto mapper
4.3.5. Responses: chứa các Models phản hồi

4.4. Users.Domain
4.4.1. Entities: chứa các thực thể của DB
4.4.2. IRepositories: là nơi chứa các interface cho các phương thức kết nối DB cho CRUD
----------------------------------------------------------------------------------------------------------------------------------
5. Requests: (kiến trúc clean) là 1 service chứa các api xử lý các yêu cầu liên quan đến việc yêu cầu sủa chữa tại căn hộ khách hàng
5.1. Requests.Api: (cùng cấp độ với Requests.Infrastructure)
5.1.1. Controllers: là nơi chứa các api xử lý các yêu cầu liên quan đến việc yêu cầu sủa chữa tại căn hộ khách hàng

5.2. Requests.Infrastructure: (cùng cấp độ với Requests.Api)
5.2.1. Repositories: chứa các phương thức kết nối DB cho CRUD

5.3. Requests.Application: CQRS
5.3.1. Commands: chứa các command liên quan đến việc Create, Update, Delete trong DB
5.3.2. Queries: chứa các query liên quan đến việc Read trong DB
5.3.3. Handlers: chứa các handler xử lý các commands và queries
5.3.4. Mappers: chứa các ánh xạ bằng auto mapper
5.3.5. ViewModels: chứa các Models hỗ trợ thêm

5.4. Requests.Domain
5.4.1. Entities: chứa các thực thể của DB
5.4.2. IRepositories: là nơi chứa các interface cho các phương thức kết nối DB cho CRUD
-------------------------------------------------------------------------------------------------------------------------------------
Cho 1 ví dụ của api get my account
- Bên FE bấm button get my account, thì bên fe sẽ truyền (command hoặc query) trong cái request đến gate way url
- Từ gate way sẽ điều phối cái request đó đến service tương ứng (ở đây ví dụ là get my account thì sẽ đến User service)
- Từ User service (Users.Api/AccountController) sẽ check xác thực và phân quyền (nếu có), nếu thỏa thì sẽ chuyển xuống cho Handler xử lý
- Từ Handler sẽ chuyển sang Domain (IRepositories-chứa các interface kết nối DB cho CRUD)
- Rồi lại chuyển sang Users.Infrastructure (chứa Repositories implement cho IRepositories)
- Rồi trả kết quả CRUD từ Users.Infrastructure -> Users.Domain -> User.Application (Handler)
- Rồi có kết quả rồi thì từ Handle -> Users.Api -> FrontEnd

Mấy api khác tương tự












