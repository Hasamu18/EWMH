version: '3.4'

services:
  gateway.api:
    container_name: gateway.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "8000:8080" 

  users.api:
    container_name: users.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # LocalHost
      #- "ConnectionStrings__SqlServer=Server=sep490.db;Database=Sep490;Uid=sa;Pwd=Khoi@123;TrustServerCertificate=True"
      # Deployed DB
      - "ConnectionStrings__SqlServer=Server=sep490db.database.windows.net; Uid=sqladmin ; Pwd=Sep49012345!; Database=Sep490; TrustServerCertificate=True"
    depends_on:
      - sep490.db
    ports:
      - "8001:8080"
    networks:
      - my_network
 
  sales.api:
    container_name: sales.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # LocalHost
      #- "ConnectionStrings__SqlServer=Server=sep490.db;Database=Sep490;Uid=sa;Pwd=Khoi@123;TrustServerCertificate=True"
      # Deployed DB
      - "ConnectionStrings__SqlServer=Server=sep490db.database.windows.net; Uid=sqladmin ; Pwd=Sep49012345!; Database=Sep490; TrustServerCertificate=True"
    depends_on:
      - sep490.db
    ports:
      - "8002:8080"
    networks:
      - my_network

  requests.api:
    container_name: requests.api
    environment:
     - ASPNETCORE_ENVIRONMENT=Development
      # LocalHost
      #- "ConnectionStrings__SqlServer=Server=sep490.db;Database=Sep490;Uid=sa;Pwd=Khoi@123;TrustServerCertificate=True"
      # Deployed DB
     - "ConnectionStrings__SqlServer=Server=sep490db.database.windows.net; Uid=sqladmin ; Pwd=Sep49012345!; Database=Sep490; TrustServerCertificate=True"
    depends_on:
      - sep490.db
    ports:
      - "8003:8080"
    networks:
      - my_network

  sep490.db:
    container_name: sep490.db
    environment:
      SA_PASSWORD: "Khoi@123"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1434:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - my_network
    
networks:
  my_network:
    driver: bridge